#!/usr/bin/env bash


## Find true directory script resides in, true name, and true path
__SOURCE__="${BASH_SOURCE[0]}"
while [[ -h "${__SOURCE__}" ]]; do
    __SOURCE__="$(find "${__SOURCE__}" -type l -ls | sed -n 's@^.* -> \(.*\)@\1@p')"
done
__DIR__="$(cd -P "$(dirname "${__SOURCE__}")" && pwd)"
__DIR_NAME__="${__DIR__##*/}"
__NAME__="${__SOURCE__##*/}"
__PATH__="${__DIR__}/${__NAME__}"
__AUTHOR__='S0AndS0'
__DESCRIPTION__='Logs `install` and `upgrade` actions for `apt-get` via `script`'


## Source dependencies
source "${__DIR__}/modules/trap-failure/failure.sh"
trap 'failure "LINENO" "BASH_LINENO" "${BASH_COMMAND}" "${?}"' ERR


## Source configurations when available
[[ -f "${__DIR__}/configurations.sh" ]] && {
  source "${__DIR__}/configurations.sh"
}


__license__(){
    _year="$(date +'%Y')"
    cat <<EOF
${__DESCRIPTION__}
Copyright (C) ${_year:-2020} ${__AUTHOR__:-"S0AndS0"}

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU Affero General Public License as published
by the Free Software Foundation, version 3 of the License.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Affero General Public License for more details.

You should have received a copy of the GNU Affero General Public License
along with this program.  If not, see <https://www.gnu.org/licenses/>.
EOF
}


__usage__() {
    local _message="${1}"
    cat <<EOF
${__DESCRIPTION__}



## Available command options


-h

    Prints this message and exists


--license   -l

    Prints license and exits


--verbose   -v

    Prints messages about skipped actions



## Example usage


    ${__NAME__%.*} install vim


Above command will create a log file at...


    ${_log_dir}/apt-get/install/$(date +"${_date_format}")__vim.script
EOF

    ! (("${#_message}")) || {
        printf >&2 '\n\n## Error: %s\n' "${_message}"
    }
}


## Defaults
_date_format="${_date_format:-"%Y%m%d"}"
_log_dir="${_log_dir:-"${HOME}/Documents/logs"}"
_executing_user="${SUDO_USER:-${USER}}"
_executing_group="${GROUPS}"
[[ "${_executing_user}" != 'root' ]] && {
    _executing_group="$(groups "${_executing_user}" | awk '{print $3}')"
}


_operation="${@:1:1}"
_arguments="${@:2}"
(("${#@}")) || {
    __usage__ 'No arguments provided'
    exit 1
} && {
    case "${_operation}" in
        '-h')
            __usage__
            exit 0
        ;;
        '-l'|'--license'|'license')
            __license__
            exit 0
        ;;
        'install'|'upgrade')
            _time_stamp="$(date +"${_date_format}")"
            (("${#_arguments}")) && {
                _file_name="${_time_stamp}__${_arguments// /_}.script"
            } || {
                _file_name="${_time_stamp}.script"
            }

            _log_directory="${_log_dir}/apt-get/${_operation}"
            [[ -d "${_log_directory}" ]] || {
                mkdir -vp "${_log_directory}"
                chown -R "${_executing_user}":"${_executing_group}" "${_log_directory}"
            }

            _log_path="${_log_directory}/${_file_name}"

            script -ac "apt-get ${_operation} ${_arguments}" "${_log_path}"

            chown "${_executing_user}":"${_executing_group}" "${_log_path}"
        ;;
        *)
            apt-get ${_operation} ${_arguments}
        ;;
    esac
}

